# Run tests for the entire repository
#
# This workflow:
# - Tests on Python 3.10 and 3.12 (min and max supported versions)
# - Runs both main repository and audio_extract module tests
# - Uploads coverage reports to Codecov

name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # Main repository tests
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    
    - name: Run tests with pytest
      run: |
        python -m pytest -v --cov=. --cov-report=term-missing
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.12'
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # Audio Extract module specific tests
  test-audio-extract:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.12']
    
    defaults:
      run:
        working-directory: ./audio_extract

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
    
    - name: Install Python dependencies
      run: |
        make install-dev
    
    - name: Run all tests with coverage
      run: |
        make coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.12'
      with:
        flags: audio-extract
        name: audio-extract-coverage
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}