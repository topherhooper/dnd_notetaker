# Build and push Docker images for the audio-extract module
# 
# This workflow:
# - Builds Docker images on push to main/master or version tags
# - Tests images on pull requests (without pushing)
# - Supports manual builds with custom tags
#
# Images are pushed to GitHub Container Registry (ghcr.io)

name: Build Audio Extract

on:
  push:
    branches: [ main, master ]
    tags:
      - 'audio-extract-v*'
    paths:
      - 'audio_extract/**'
      - '.github/workflows/build-audio-extract.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'audio_extract/**'
      - '.github/workflows/build-audio-extract.yml'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the Docker image'
        required: false
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/audio-extract

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      # Skip login for PR builds since we won't push
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Generate Docker tags
      id: tags
      run: |
        TAGS=""
        
        # Always include SHA tag
        TAGS="${REGISTRY}/${IMAGE_NAME}:sha-${GITHUB_SHA}"
        
        # For main/master branch pushes, add 'latest'
        if [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
          TAGS="${TAGS},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        fi
        
        # For version tags, add the version
        if [[ "${{ github.ref }}" == refs/tags/audio-extract-v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/audio-extract-}
          TAGS="${TAGS},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}"
        fi
        
        # For manual builds, add custom tag
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]] && [[ -n "${{ github.event.inputs.tag_name }}" ]]; then
          TAGS="${TAGS},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag_name }}"
        fi
        
        echo "tags=${TAGS}" >> $GITHUB_OUTPUT
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./audio_extract
        file: ./audio_extract/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.tags.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
        # Load image into Docker daemon for PR testing
        load: ${{ github.event_name == 'pull_request' }}
    
    - name: Test the built image
      run: |
        # Test the image to ensure it runs correctly
        IMAGE_TO_TEST="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-${{ github.sha }}"
        echo "Testing image: ${IMAGE_TO_TEST}"
        docker run --rm ${IMAGE_TO_TEST} --help
    
    - name: Generate build summary
      if: github.event_name != 'pull_request'
      run: |
        echo "## Docker Image Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Registry:** \`${{ env.REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Repository:** \`${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Tags pushed:**" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.tags.outputs.tags }}" | tr ',' '\n' | sed 's/^/- `/' | sed 's/$/`/' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Built at:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY