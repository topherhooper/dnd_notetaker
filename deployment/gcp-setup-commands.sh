#!/bin/bash
# Commands to run on your local machine with gcloud installed

PROJECT_ID="fluted-citizen-269819"
ZONE="us-central1-a"
INSTANCE_NAME="audio-extract-staging"
MACHINE_TYPE="e2-micro"

echo "# Run these commands on your local machine:"
echo ""
echo "# 1. Set the project"
echo "gcloud config set project $PROJECT_ID"
echo ""

echo "# 2. Enable required APIs"
echo "gcloud services enable compute.googleapis.com"
echo "gcloud services enable containerregistry.googleapis.com"
echo ""

echo "# 3. Create firewall rules"
echo "gcloud compute firewall-rules create allow-audio-extract \\"
echo "    --allow tcp:80,tcp:443,tcp:8080,tcp:8081 \\"
echo "    --source-ranges 0.0.0.0/0 \\"
echo "    --target-tags http-server \\"
echo "    --description \"Allow HTTP/HTTPS and audio-extract ports\""
echo ""

echo "# 4. Create the instance (make sure you're in the deployment directory)"
echo "cd deployment  # Make sure startup-script.sh is in current directory"
echo "gcloud compute instances create $INSTANCE_NAME \\"
echo "    --zone=$ZONE \\"
echo "    --machine-type=$MACHINE_TYPE \\"
echo "    --boot-disk-size=30GB \\"
echo "    --boot-disk-type=pd-standard \\"
echo "    --image-family=ubuntu-2204-lts \\"
echo "    --image-project=ubuntu-os-cloud \\"
echo "    --tags=http-server \\"
echo "    --metadata-from-file startup-script=startup-script.sh \\"
echo "    --scopes=https://www.googleapis.com/auth/cloud-platform"
echo ""

echo "# 5. Generate SSH key for GitHub Actions"
echo "ssh-keygen -t ed25519 -f github-actions-key -N \"\" -C \"github-actions\""
echo ""

echo "# 6. Get the instance IP (after creation)"
echo "EXTERNAL_IP=\$(gcloud compute instances describe $INSTANCE_NAME \\"
echo "    --zone=$ZONE \\"
echo "    --format='get(networkInterfaces[0].accessConfigs[0].natIP)')"
echo "echo \"External IP: \$EXTERNAL_IP\""
echo ""

echo "# 7. Add SSH key to instance"
echo "gcloud compute instances add-metadata $INSTANCE_NAME \\"
echo "    --zone=$ZONE \\"
echo "    --metadata-from-file ssh-keys=<(echo \"ubuntu:\$(cat github-actions-key.pub)\")"
echo ""

echo "# 8. Create service account"
echo "gcloud iam service-accounts create github-actions \\"
echo "    --display-name=\"GitHub Actions Deployer\""
echo ""

echo "# 9. Grant permissions"
echo "SERVICE_ACCOUNT=\"github-actions@${PROJECT_ID}.iam.gserviceaccount.com\""
echo ""
echo "gcloud projects add-iam-policy-binding $PROJECT_ID \\"
echo "    --member=\"serviceAccount:\${SERVICE_ACCOUNT}\" \\"
echo "    --role=\"roles/compute.instanceAdmin.v1\""
echo ""
echo "gcloud projects add-iam-policy-binding $PROJECT_ID \\"
echo "    --member=\"serviceAccount:\${SERVICE_ACCOUNT}\" \\"
echo "    --role=\"roles/storage.admin\""
echo ""
echo "gcloud projects add-iam-policy-binding $PROJECT_ID \\"
echo "    --member=\"serviceAccount:\${SERVICE_ACCOUNT}\" \\"
echo "    --role=\"roles/iam.serviceAccountUser\""
echo ""

echo "# 10. Create service account key"
echo "gcloud iam service-accounts keys create github-actions-sa-key.json \\"
echo "    --iam-account=\"\${SERVICE_ACCOUNT}\""
echo ""

echo "# 11. After running all commands, set these GitHub secrets:"
echo "# STAGING_HOST: \$EXTERNAL_IP"
echo "# STAGING_USER: ubuntu"
echo "# STAGING_URL: http://\$EXTERNAL_IP:8081"
echo "# STAGING_SSH_KEY: (contents of github-actions-key)"
echo "# GCP_PROJECT_ID: $PROJECT_ID"
echo "# GCP_ZONE: $ZONE"
echo "# GCP_SA_KEY: (base64 encoded github-actions-sa-key.json)"